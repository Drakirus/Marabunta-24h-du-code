
BEGIN NEST

	SI MEMORY[i] == pasEncoreCree // on a pas encore envoyé l'ant i
		SET_MEMORY[i] = pasEncorePartie
		ANT_NEW exploratirce
		return
	FSI

	SI MEMORY[i] = pasEncorePartie
		SET_MEMORY[i] = partie
		ANT_OUT unPeuDeFood exploratirce i false
		return
	FSI

	POUR ant dans ANT_IN qui sont du type exploratirce FAIRE
		SI MEMOIRE[ant.m0] == pasEncorePartie || partie
			SET_MEMOIRE[ant.m0] = cheminValide
		FSI
	FIN

	SI ANT_COUNT selectionner type == ramasseuse nombre > 0
		ANT_OUT ramasseuse unPeuDeFood je sais pas	
	SINON
		ANT_NEW ramasseuse
		return
	FIN

END


BEGIN ANT

	SI TYPE == exploratirce:

		idChemin = donné à la création de la fourmis
		aRecupBouffe = boolean
		
		SI STAMINA.quantity < 10
			EAT 1
			return
		FSI

		SI il y a des ph en NEAR et que persistance < 30 
			RECHARGE_PH(celle qui est near et proche)
			return
		FSI

		SI aRecupBouffe 
			MOVE_TO la ph la plus loin
		FSI
		

		distance = min(SEE_NEST.dist, SEE_PH.dist & SEE_PH.type == idChemin)
		SI distance > 90
			PUT_PHEROMONE(idChemin)
			return
		FSI

		SI(SEE_FOOD)
			SI SEE_FOOD.zone == FAR
				MOVE_TO SEE_FOOD.id
				return
			FSI
			
			COLLECT SEE_FOOD.id SEE_FOOD.amount
			aRecupBouffe = true
			SET_MEMORY idChemin aRecupBouffe
			return
		
		FSI

		EXPLORE

	SINON SI TYPE == ramasseuse


	FSI
END



